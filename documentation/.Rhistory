demo()
library()
x <- 1
print(x)
x
msg <- "hello, world!"
msg
msg + 1
x <- ##incomplete expression
3
x
x
x <- 1:20
x
1l
x <- c(0.5,0.6)
x
x <- c(0.5, 0.6)
x
x <- vector("numeric", length = 10)
x
x <- 0:6
x
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
x <- list(1, "a", TRUE, 1 + 4i)
x
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
x <- c(1, 2, NA, 10, 3)
x
is.na(x)
is.nan()
is.nan(x)
x <- data.frame(foo = 1:4, bat = c(T, T, F, F))
x
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
x <- 1:3
x
names(x)
names(x) <- c("foo", "bar", "norf")
x
x <- list(a = 1, b = 2, c = 3)
x
m <- matrix(1:4, nrow = 2, ncol = 2)
carlos = c(23, 41, 100)
christina = c(24, 11, 841)
df <- data.frame(carlos,christina)
df
install.packages('tibble')
library("tibble", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages(rmakdown)
install.packages('rmakdown')
install.packages("rmakdown")
install.packages("rmakdown")
install.packages("rmakdown")
install.packages(c("Matrix", "mgcv", "nlme", "survival"))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpleHNvcmVzdDo6Zjk4OTRhOWEtZmQ2MC00MjY0LThhOTctOWFiNTA5ZjM4NmJlIiwiaWF0IjoxNDg0Njk3MzM2LCJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0Iiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.6eTDpbqzGC7rJuedBowDOrzJWFhIPAWuvOrvk3PIunECvfqMcbEwaRTvJIrlahbTpeC50jLI-zWt4Vf1yxJXKQ', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpleHNvcmVzdDo6Zjk4OTRhOWEtZmQ2MC00MjY0LThhOTctOWFiNTA5ZjM4NmJlIiwiaWF0IjoxNDg0Njk3MzM2LCJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0Iiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.6eTDpbqzGC7rJuedBowDOrzJWFhIPAWuvOrvk3PIunECvfqMcbEwaRTvJIrlahbTpeC50jLI-zWt4Vf1yxJXKQ', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpleHNvcmVzdDo6Zjk4OTRhOWEtZmQ2MC00MjY0LThhOTctOWFiNTA5ZjM4NmJlIiwiaWF0IjoxNDg0Njk3MzM2LCJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0Iiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.6eTDpbqzGC7rJuedBowDOrzJWFhIPAWuvOrvk3PIunECvfqMcbEwaRTvJIrlahbTpeC50jLI-zWt4Vf1yxJXKQ', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpleHNvcmVzdDo6Zjk4OTRhOWEtZmQ2MC00MjY0LThhOTctOWFiNTA5ZjM4NmJlIiwiaWF0IjoxNDg0Njk3MzM2LCJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0Iiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.6eTDpbqzGC7rJuedBowDOrzJWFhIPAWuvOrvk3PIunECvfqMcbEwaRTvJIrlahbTpeC50jLI-zWt4Vf1yxJXKQ', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='cannata', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='cannata', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'cloya@oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='cannata', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
ggplot(data = diamonds) +
geom_point(aes(x=cut, y=price, color=color)) +
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
labs(title="Grammar of Graphics Example")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(data = diamonds) +
geom_point(aes(x=cut, y=price, color=color)) +
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
labs(title="Grammar of Graphics Example")
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
source('~/Code/DataVisualization/01 RESTful Data Access/Access data.world Database.R', echo=TRUE)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="SELECT all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="select all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
ggplot(data = diamonds) +
geom_point(aes(x=cut, y=price, color=color)) +
#facet_grid(~clarity) +
facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
labs(title="Grammar of Graphics Example")
ggplot(data=mpg) +
geom_point(aes(x=class,y=hwy))
ggplot(data=mpg) +
geom_point(aes(x=class,y=hwy, color=year))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="select all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard. Also change cannata:test-emp-and-dept to yourAccount:yourDataset.
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5048/rest/native/?query="select all_cleaned_data.imgT, all_cleaned_data.targetImg, all_cleaned_data.distractImg, all_cleaned_data.correct, all_cleaned_data.eye_accuracy, all_cleaned_data.RT FROM `all_cleaned_data` LIMIT 100"')),httpheader=c(DB='jdbc:data:world:sql:exsorest:s-17-edv-project-1', USER='exsorest', PASS="eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmV4c29yZXN0IiwiaXNzIjoiYWdlbnQ6ZXhzb3Jlc3Q6OmY5ODk0YTlhLWZkNjAtNDI2NC04YTk3LTlhYjUwOWYzODZiZSIsImlhdCI6MTQ4NDY5NzMzNiwicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.WLINQ3z7bGjvYCmpDR3Fvl3LZ4fFDLBDCngivFE3nfoF1EgGQQ0WCxZElC2bxC3YUoUiYEJ6hz8rxVW3yHoecg", MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
print(summary(df))
print(head(df))
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% dplyr::arrange(desc(x)) %>% tbl_df
require(tidyr)
require(dplyr)
require(ggplot2)
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% dplyr::arrange(desc(x)) %>% tbl_df
diamonds %>% dplyr::mutate(minxy = pmin(x,y)) %>% tbl_df
diamonds %>% dplyr::mutate(between_x = between(x,4,4.1)) %>% tbl_df
lapply('alphabet begins with abc', gsub, pattern="[abc]",replacement= "")
lapply('alphabet begins with xyz', gsub, pattern="xyz",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="[^ac]",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="^[abc]",replacement= "")
lapply('alphabet begins with --- abc', gsub, pattern="[a-e]",replacement= "")
lapply('alphabet begins with [] abc', gsub, pattern="[ae[]",replacement= "")
lapply('alphabet begins with [] abc', gsub, pattern="[ae]]",replacement= "")
file_path = "../../CSVs/PreETL_Diamonds.csv"
setwd("~/OneDrive/school/ut/spring17/cs 329 - Elements of DataVisualization/projects/dvproject-3-loya-stewart-nguyen/00 Doc")
file_path = "../01 Data/fatal-police-shootings-data.csv"
df <- read.csv(file_path, header=TRUE, stringsAsFactors=FALSE)
df$name <- NULL
names(df)
str(df)
measures <- c("id", "age")
dimensions <- setdiff(names(df), measures)
dimensions
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
df["state"] <- data.frame(lapply(df["state"], toupper))
df$race <- gsub("W", "WHITE", df$race)
df$race <- gsub("^[H]", "HISPANIC", df$race)
df$race <- gsub("^[B]", "BLACK", df$race)
df$race <- gsub("^[N]", "NATIVE AMERICAN", df$race)
df$race <- gsub("^[A]", "ASIAN", df$race)
df$race <- gsub("^[O]", "OTHER", df$race)
df["race"]
df$gender <- gsub("F", "FEMALE", df$gender)
df$gender <- gsub("^[M]", "MALE", df$gender)
df["gender"]
head(df)
na2emptyString <- function (x) {
x[is.na(x)] <- ""
return(x)
}
if(length(dimensions) > 0) {
for(d in dimensions) {
# Change NA to the empty string.
df[d] <- data.frame(lapply(df[d], na2emptyString))
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
na2zero <- function (x) {
x[is.na(x)] <- 0
return(x)
}
if( length(measures) > 1) {
for(m in measures) {
print(m)
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
df[m] <- data.frame(lapply(df[m], na2zero))
df[m] <- data.frame(lapply(df[m], function(x) as.numeric(as.character(x))))
}
}
str(df)
knitr::opts_chunk$set(echo=TRUE)
sessionInfo(package=NULL)
sessionInfo()
knitr::opts_chunk$set(echo=TRUE)
sessionInfo(package=NULL)
knitr::opts_chunk$set(echo=TRUE)
sessionInfo(package=NULL)
sessionInfo(package=NULL)
